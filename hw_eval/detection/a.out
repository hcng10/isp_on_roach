#! /home/maolin/Apps/iverilog/bin/vvp
:ivl_version "11.0 (devel)" "(s20150603-359-g6e5ed73)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "system";
:vpi_module "vhdl_sys";
:vpi_module "vhdl_textio";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x1fac940 .scope module, "detectobj" "detectobj" 2 9;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "clk"
    .port_info 1 /INPUT 1 "ce"
    .port_info 2 /INPUT 128 "rddata"
    .port_info 3 /INPUT 1 "rdempty"
    .port_info 4 /INPUT 1 "reset"
    .port_info 5 /OUTPUT 1 "rdfifo"
    .port_info 6 /OUTPUT 5 "stateoutput"
    .port_info 7 /OUTPUT 8 "periodcounteroutput"
    .port_info 8 /OUTPUT 8 "linecounteroutput"
P_0x1f98de0 .param/l "BgCompute" 0 2 33, +C4<00000000000000000000000000000010>;
P_0x1f98e20 .param/l "BgLineNum" 0 2 87, C4<0000000000001000>;
P_0x1f98e60 .param/l "BgRead" 0 2 33, +C4<00000000000000000000000000000001>;
P_0x1f98ea0 .param/l "BgWait" 0 2 33, +C4<00000000000000000000000000000000>;
P_0x1f98ee0 .param/l "InObjWait" 0 2 33, +C4<00000000000000000000000000000101>;
P_0x1f98f20 .param/l "OutObjRead" 0 2 33, +C4<00000000000000000000000000000100>;
P_0x1f98f60 .param/l "OutObjWait" 0 2 33, +C4<00000000000000000000000000000011>;
P_0x1f98fa0 .param/l "PeriodNum" 0 2 37, C4<00010101>;
L_0x1fd4b10 .functor BUFZ 5, v0x1fd44c0_0, C4<00000>, C4<00000>, C4<00000>;
L_0x1fd4be0 .functor BUFZ 8, v0x1fd39e0_0, C4<00000000>, C4<00000000>, C4<00000000>;
v0x1fd2fa0_0 .var "AboveBgTimes", 7 0;
v0x1fd3080_0 .var/s "BgAbsSum", 31 0;
v0x1fd3160 .array/s "BgNoise", 0 335, 15 0;
v0x1fd3200_0 .var/s "CurAbsSum", 31 0;
v0x1fd32f0_0 .var "CurNoise", 255 0;
v0x1fd33e0_0 .var "EqualBgObjTimes", 7 0;
v0x1fd34a0_0 .var "InObjTimesThres", 7 0;
v0x1fd3580 .array/s "LineAbsSum", 0 7, 31 0;
v0x1fd3790_0 .var "LineCounter", 15 0;
v0x1fd3900_0 .var "OutObjTimesThres", 7 0;
v0x1fd39e0_0 .var "PeriodCounter", 7 0;
v0x1fd3ac0_0 .var "PeriodData", 127 0;
v0x1fd3b80_0 .net/s "UpdatedAbsSum", 31 0, v0x1fd1e80_0;  1 drivers
v0x1fd3c40_0 .net "UpdatedNoise", 255 0, v0x1fd2d30_0;  1 drivers
o0x7f6d0b71d4b8 .functor BUFZ 1, C4<z>; HiZ drive
v0x1fd3d10_0 .net "ce", 0 0, o0x7f6d0b71d4b8;  0 drivers
o0x7f6d0b71d4e8 .functor BUFZ 1, C4<z>; HiZ drive
v0x1fd3db0_0 .net "clk", 0 0, o0x7f6d0b71d4e8;  0 drivers
v0x1fd3e70_0 .var/i "i", 31 0;
v0x1fd4020_0 .net "linecounteroutput", 7 0, L_0x1fd4cb0;  1 drivers
v0x1fd40c0_0 .net "periodcounteroutput", 7 0, L_0x1fd4be0;  1 drivers
o0x7f6d0b71d5a8 .functor BUFZ 128, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>; HiZ drive
v0x1fd41a0_0 .net "rddata", 127 0, o0x7f6d0b71d5a8;  0 drivers
o0x7f6d0b71d5d8 .functor BUFZ 1, C4<z>; HiZ drive
v0x1fd4280_0 .net "rdempty", 0 0, o0x7f6d0b71d5d8;  0 drivers
v0x1fd4340_0 .var "rdfifo", 0 0;
o0x7f6d0b71d638 .functor BUFZ 1, C4<z>; HiZ drive
v0x1fd4400_0 .net "reset", 0 0, o0x7f6d0b71d638;  0 drivers
v0x1fd44c0_0 .var "state", 4 0;
v0x1fd45a0_0 .net "stateoutput", 4 0, L_0x1fd4b10;  1 drivers
v0x1fd4680_0 .net/s "windowsum", 31 0, v0x1fd0ec0_0;  1 drivers
E_0x1facad0/0 .event negedge, v0x1fd4400_0;
E_0x1facad0/1 .event posedge, v0x1fd3db0_0;
E_0x1facad0 .event/or E_0x1facad0/0, E_0x1facad0/1;
v0x1fd3580_0 .array/port v0x1fd3580, 0;
v0x1fd3580_1 .array/port v0x1fd3580, 1;
v0x1fd3580_2 .array/port v0x1fd3580, 2;
v0x1fd3580_3 .array/port v0x1fd3580, 3;
LS_0x1fd48c0_0_0 .concat [ 32 32 32 32], v0x1fd3580_0, v0x1fd3580_1, v0x1fd3580_2, v0x1fd3580_3;
v0x1fd3580_4 .array/port v0x1fd3580, 4;
v0x1fd3580_5 .array/port v0x1fd3580, 5;
v0x1fd3580_6 .array/port v0x1fd3580, 6;
v0x1fd3580_7 .array/port v0x1fd3580, 7;
LS_0x1fd48c0_0_4 .concat [ 32 32 32 32], v0x1fd3580_4, v0x1fd3580_5, v0x1fd3580_6, v0x1fd3580_7;
L_0x1fd48c0 .concat [ 128 128 0 0], LS_0x1fd48c0_0_0, LS_0x1fd48c0_0_4;
L_0x1fd4cb0 .part v0x1fd3790_0, 0, 8;
S_0x1fac6e0 .scope module, "WindowSum" "WindowSumCalc" 2 75, 3 1 0, S_0x1fac940;
 .timescale -9 -12;
    .port_info 0 /INPUT 256 "windowdata"
    .port_info 1 /OUTPUT 32 "windowsum"
v0x1f98ff0 .array/s "AccTreeL1", 0 7, 31 0;
v0x1fd0a10 .array/s "AccTreeL2", 0 3, 31 0;
v0x1fd0b80 .array/s "AccTreeL3", 0 1, 31 0;
v0x1fd0cb0_0 .var/i "i", 31 0;
v0x1fd0d90_0 .net "windowdata", 255 0, L_0x1fd48c0;  1 drivers
v0x1fd0ec0_0 .var/s "windowsum", 31 0;
v0x1f98ff0_0 .array/port v0x1f98ff0, 0;
v0x1f98ff0_1 .array/port v0x1f98ff0, 1;
v0x1f98ff0_2 .array/port v0x1f98ff0, 2;
E_0x1f8b240/0 .event edge, v0x1fd0d90_0, v0x1f98ff0_0, v0x1f98ff0_1, v0x1f98ff0_2;
v0x1f98ff0_3 .array/port v0x1f98ff0, 3;
v0x1f98ff0_4 .array/port v0x1f98ff0, 4;
v0x1f98ff0_5 .array/port v0x1f98ff0, 5;
v0x1f98ff0_6 .array/port v0x1f98ff0, 6;
E_0x1f8b240/1 .event edge, v0x1f98ff0_3, v0x1f98ff0_4, v0x1f98ff0_5, v0x1f98ff0_6;
v0x1f98ff0_7 .array/port v0x1f98ff0, 7;
v0x1fd0a10_0 .array/port v0x1fd0a10, 0;
v0x1fd0a10_1 .array/port v0x1fd0a10, 1;
v0x1fd0a10_2 .array/port v0x1fd0a10, 2;
E_0x1f8b240/2 .event edge, v0x1f98ff0_7, v0x1fd0a10_0, v0x1fd0a10_1, v0x1fd0a10_2;
v0x1fd0a10_3 .array/port v0x1fd0a10, 3;
v0x1fd0b80_0 .array/port v0x1fd0b80, 0;
v0x1fd0b80_1 .array/port v0x1fd0b80, 1;
E_0x1f8b240/3 .event edge, v0x1fd0a10_3, v0x1fd0b80_0, v0x1fd0b80_1;
E_0x1f8b240 .event/or E_0x1f8b240/0, E_0x1f8b240/1, E_0x1f8b240/2, E_0x1f8b240/3;
S_0x1fd1000 .scope module, "abssum" "AbsSumCalc" 2 51, 4 1 0, S_0x1fac940;
 .timescale -9 -12;
    .port_info 0 /INPUT 128 "PeriodData"
    .port_info 1 /INPUT 32 "CurAbsSum"
    .port_info 2 /OUTPUT 32 "UpdatedAbsSum"
v0x1fd13a0 .array/s "AccTreeL1", 0 7, 31 0;
v0x1fd15d0 .array/s "AccTreeL2", 0 3, 31 0;
v0x1fd1710 .array/s "AccTreeL3", 0 1, 31 0;
v0x1fd1840_0 .var/s "AccTreeResult", 31 0;
v0x1fd1920_0 .net/s "CurAbsSum", 31 0, v0x1fd3200_0;  1 drivers
v0x1fd1a50 .array/s "Data", 0 15, 7 0;
v0x1fd1da0_0 .net "PeriodData", 127 0, v0x1fd3ac0_0;  1 drivers
v0x1fd1e80_0 .var/s "UpdatedAbsSum", 31 0;
v0x1fd1f60_0 .var/i "i", 31 0;
v0x1fd1a50_0 .array/port v0x1fd1a50, 0;
v0x1fd1a50_1 .array/port v0x1fd1a50, 1;
v0x1fd1a50_2 .array/port v0x1fd1a50, 2;
E_0x1fd1230/0 .event edge, v0x1fd1da0_0, v0x1fd1a50_0, v0x1fd1a50_1, v0x1fd1a50_2;
v0x1fd1a50_3 .array/port v0x1fd1a50, 3;
v0x1fd1a50_4 .array/port v0x1fd1a50, 4;
v0x1fd1a50_5 .array/port v0x1fd1a50, 5;
v0x1fd1a50_6 .array/port v0x1fd1a50, 6;
E_0x1fd1230/1 .event edge, v0x1fd1a50_3, v0x1fd1a50_4, v0x1fd1a50_5, v0x1fd1a50_6;
v0x1fd1a50_7 .array/port v0x1fd1a50, 7;
v0x1fd1a50_8 .array/port v0x1fd1a50, 8;
v0x1fd1a50_9 .array/port v0x1fd1a50, 9;
v0x1fd1a50_10 .array/port v0x1fd1a50, 10;
E_0x1fd1230/2 .event edge, v0x1fd1a50_7, v0x1fd1a50_8, v0x1fd1a50_9, v0x1fd1a50_10;
v0x1fd1a50_11 .array/port v0x1fd1a50, 11;
v0x1fd1a50_12 .array/port v0x1fd1a50, 12;
v0x1fd1a50_13 .array/port v0x1fd1a50, 13;
v0x1fd1a50_14 .array/port v0x1fd1a50, 14;
E_0x1fd1230/3 .event edge, v0x1fd1a50_11, v0x1fd1a50_12, v0x1fd1a50_13, v0x1fd1a50_14;
v0x1fd1a50_15 .array/port v0x1fd1a50, 15;
v0x1fd13a0_0 .array/port v0x1fd13a0, 0;
v0x1fd13a0_1 .array/port v0x1fd13a0, 1;
v0x1fd13a0_2 .array/port v0x1fd13a0, 2;
E_0x1fd1230/4 .event edge, v0x1fd1a50_15, v0x1fd13a0_0, v0x1fd13a0_1, v0x1fd13a0_2;
v0x1fd13a0_3 .array/port v0x1fd13a0, 3;
v0x1fd13a0_4 .array/port v0x1fd13a0, 4;
v0x1fd13a0_5 .array/port v0x1fd13a0, 5;
v0x1fd13a0_6 .array/port v0x1fd13a0, 6;
E_0x1fd1230/5 .event edge, v0x1fd13a0_3, v0x1fd13a0_4, v0x1fd13a0_5, v0x1fd13a0_6;
v0x1fd13a0_7 .array/port v0x1fd13a0, 7;
v0x1fd15d0_0 .array/port v0x1fd15d0, 0;
v0x1fd15d0_1 .array/port v0x1fd15d0, 1;
v0x1fd15d0_2 .array/port v0x1fd15d0, 2;
E_0x1fd1230/6 .event edge, v0x1fd13a0_7, v0x1fd15d0_0, v0x1fd15d0_1, v0x1fd15d0_2;
v0x1fd15d0_3 .array/port v0x1fd15d0, 3;
v0x1fd1710_0 .array/port v0x1fd1710, 0;
v0x1fd1710_1 .array/port v0x1fd1710, 1;
E_0x1fd1230/7 .event edge, v0x1fd15d0_3, v0x1fd1710_0, v0x1fd1710_1, v0x1fd1920_0;
E_0x1fd1230/8 .event edge, v0x1fd1840_0;
E_0x1fd1230 .event/or E_0x1fd1230/0, E_0x1fd1230/1, E_0x1fd1230/2, E_0x1fd1230/3, E_0x1fd1230/4, E_0x1fd1230/5, E_0x1fd1230/6, E_0x1fd1230/7, E_0x1fd1230/8;
S_0x1fd2150 .scope module, "bgnoise" "BgNoiseCalc" 2 56, 5 1 0, S_0x1fac940;
 .timescale -9 -12;
    .port_info 0 /INPUT 128 "PeriodData"
    .port_info 1 /INPUT 256 "CurNoise"
    .port_info 2 /OUTPUT 256 "UpdatedNoise"
v0x1fd2490 .array/s "CurBgData", 0 15, 15 0;
v0x1fd2800_0 .net "CurNoise", 255 0, v0x1fd32f0_0;  1 drivers
v0x1fd28e0 .array/s "Data", 0 15, 7 0;
v0x1fd2c40_0 .net "PeriodData", 127 0, v0x1fd3ac0_0;  alias, 1 drivers
v0x1fd2d30_0 .var "UpdatedNoise", 255 0;
v0x1fd2e40_0 .var/i "i", 31 0;
v0x1fd28e0_0 .array/port v0x1fd28e0, 0;
v0x1fd28e0_1 .array/port v0x1fd28e0, 1;
E_0x1fd2330/0 .event edge, v0x1fd1da0_0, v0x1fd2800_0, v0x1fd28e0_0, v0x1fd28e0_1;
v0x1fd28e0_2 .array/port v0x1fd28e0, 2;
v0x1fd28e0_3 .array/port v0x1fd28e0, 3;
v0x1fd28e0_4 .array/port v0x1fd28e0, 4;
v0x1fd28e0_5 .array/port v0x1fd28e0, 5;
E_0x1fd2330/1 .event edge, v0x1fd28e0_2, v0x1fd28e0_3, v0x1fd28e0_4, v0x1fd28e0_5;
v0x1fd28e0_6 .array/port v0x1fd28e0, 6;
v0x1fd28e0_7 .array/port v0x1fd28e0, 7;
v0x1fd28e0_8 .array/port v0x1fd28e0, 8;
v0x1fd28e0_9 .array/port v0x1fd28e0, 9;
E_0x1fd2330/2 .event edge, v0x1fd28e0_6, v0x1fd28e0_7, v0x1fd28e0_8, v0x1fd28e0_9;
v0x1fd28e0_10 .array/port v0x1fd28e0, 10;
v0x1fd28e0_11 .array/port v0x1fd28e0, 11;
v0x1fd28e0_12 .array/port v0x1fd28e0, 12;
v0x1fd28e0_13 .array/port v0x1fd28e0, 13;
E_0x1fd2330/3 .event edge, v0x1fd28e0_10, v0x1fd28e0_11, v0x1fd28e0_12, v0x1fd28e0_13;
v0x1fd28e0_14 .array/port v0x1fd28e0, 14;
v0x1fd28e0_15 .array/port v0x1fd28e0, 15;
v0x1fd2490_0 .array/port v0x1fd2490, 0;
v0x1fd2490_1 .array/port v0x1fd2490, 1;
E_0x1fd2330/4 .event edge, v0x1fd28e0_14, v0x1fd28e0_15, v0x1fd2490_0, v0x1fd2490_1;
v0x1fd2490_2 .array/port v0x1fd2490, 2;
v0x1fd2490_3 .array/port v0x1fd2490, 3;
v0x1fd2490_4 .array/port v0x1fd2490, 4;
v0x1fd2490_5 .array/port v0x1fd2490, 5;
E_0x1fd2330/5 .event edge, v0x1fd2490_2, v0x1fd2490_3, v0x1fd2490_4, v0x1fd2490_5;
v0x1fd2490_6 .array/port v0x1fd2490, 6;
v0x1fd2490_7 .array/port v0x1fd2490, 7;
v0x1fd2490_8 .array/port v0x1fd2490, 8;
v0x1fd2490_9 .array/port v0x1fd2490, 9;
E_0x1fd2330/6 .event edge, v0x1fd2490_6, v0x1fd2490_7, v0x1fd2490_8, v0x1fd2490_9;
v0x1fd2490_10 .array/port v0x1fd2490, 10;
v0x1fd2490_11 .array/port v0x1fd2490, 11;
v0x1fd2490_12 .array/port v0x1fd2490, 12;
v0x1fd2490_13 .array/port v0x1fd2490, 13;
E_0x1fd2330/7 .event edge, v0x1fd2490_10, v0x1fd2490_11, v0x1fd2490_12, v0x1fd2490_13;
v0x1fd2490_14 .array/port v0x1fd2490, 14;
v0x1fd2490_15 .array/port v0x1fd2490, 15;
E_0x1fd2330/8 .event edge, v0x1fd2490_14, v0x1fd2490_15;
E_0x1fd2330 .event/or E_0x1fd2330/0, E_0x1fd2330/1, E_0x1fd2330/2, E_0x1fd2330/3, E_0x1fd2330/4, E_0x1fd2330/5, E_0x1fd2330/6, E_0x1fd2330/7, E_0x1fd2330/8;
    .scope S_0x1fd1000;
T_0 ;
    %wait E_0x1fd1230;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fd1f60_0, 0, 32;
T_0.0 ;
    %load/vec4 v0x1fd1f60_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_0.1, 5;
    %load/vec4 v0x1fd1da0_0;
    %load/vec4 v0x1fd1f60_0;
    %muli 8, 0, 32;
    %part/s 8;
    %ix/getv/s 4, v0x1fd1f60_0;
    %store/vec4a v0x1fd1a50, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1fd1f60_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x1fd1f60_0, 0, 32;
    %jmp T_0.0;
T_0.1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fd1f60_0, 0, 32;
T_0.2 ;
    %load/vec4 v0x1fd1f60_0;
    %cmpi/s 8, 0, 32;
    %jmp/0xz T_0.3, 5;
    %load/vec4 v0x1fd1f60_0;
    %pad/s 64;
    %muli 2, 0, 64;
    %ix/vec4/s 4;
    %load/vec4a v0x1fd1a50, 4;
    %pad/s 32;
    %cmpi/s 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %flag_mov 8, 5;
    %jmp/0 T_0.4, 8;
    %load/vec4 v0x1fd1f60_0;
    %pad/s 64;
    %muli 2, 0, 64;
    %ix/vec4/s 4;
    %load/vec4a v0x1fd1a50, 4;
    %pad/s 32;
    %jmp/1 T_0.5, 8;
T_0.4 ; End of true expr.
    %load/vec4 v0x1fd1f60_0;
    %pad/s 64;
    %muli 2, 0, 64;
    %ix/vec4/s 4;
    %load/vec4a v0x1fd1a50, 4;
    %pad/s 32;
    %inv;
    %pushi/vec4 1, 0, 32;
    %add;
    %jmp/0 T_0.5, 8;
 ; End of false expr.
    %blend;
T_0.5;
    %load/vec4 v0x1fd1f60_0;
    %pad/s 65;
    %muli 2, 0, 65;
    %addi 1, 0, 65;
    %ix/vec4/s 4;
    %load/vec4a v0x1fd1a50, 4;
    %pad/s 32;
    %cmpi/s 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %flag_mov 8, 5;
    %jmp/0 T_0.6, 8;
    %load/vec4 v0x1fd1f60_0;
    %pad/s 65;
    %muli 2, 0, 65;
    %addi 1, 0, 65;
    %ix/vec4/s 4;
    %load/vec4a v0x1fd1a50, 4;
    %pad/s 32;
    %jmp/1 T_0.7, 8;
T_0.6 ; End of true expr.
    %load/vec4 v0x1fd1f60_0;
    %pad/s 65;
    %muli 2, 0, 65;
    %addi 1, 0, 65;
    %ix/vec4/s 4;
    %load/vec4a v0x1fd1a50, 4;
    %pad/s 32;
    %inv;
    %pushi/vec4 1, 0, 32;
    %add;
    %jmp/0 T_0.7, 8;
 ; End of false expr.
    %blend;
T_0.7;
    %add;
    %ix/getv/s 4, v0x1fd1f60_0;
    %store/vec4a v0x1fd13a0, 4, 0;
    %load/vec4 v0x1fd1f60_0;
    %addi 1, 0, 32;
    %store/vec4 v0x1fd1f60_0, 0, 32;
    %jmp T_0.2;
T_0.3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fd1f60_0, 0, 32;
T_0.8 ;
    %load/vec4 v0x1fd1f60_0;
    %cmpi/s 4, 0, 32;
    %jmp/0xz T_0.9, 5;
    %load/vec4 v0x1fd1f60_0;
    %pad/s 64;
    %muli 2, 0, 64;
    %ix/vec4/s 4;
    %load/vec4a v0x1fd13a0, 4;
    %load/vec4 v0x1fd1f60_0;
    %pad/s 65;
    %muli 2, 0, 65;
    %addi 1, 0, 65;
    %ix/vec4/s 4;
    %load/vec4a v0x1fd13a0, 4;
    %add;
    %ix/getv/s 4, v0x1fd1f60_0;
    %store/vec4a v0x1fd15d0, 4, 0;
    %load/vec4 v0x1fd1f60_0;
    %addi 1, 0, 32;
    %store/vec4 v0x1fd1f60_0, 0, 32;
    %jmp T_0.8;
T_0.9 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fd1f60_0, 0, 32;
T_0.10 ;
    %load/vec4 v0x1fd1f60_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_0.11, 5;
    %load/vec4 v0x1fd1f60_0;
    %pad/s 64;
    %muli 2, 0, 64;
    %ix/vec4/s 4;
    %load/vec4a v0x1fd15d0, 4;
    %load/vec4 v0x1fd1f60_0;
    %pad/s 65;
    %muli 2, 0, 65;
    %addi 1, 0, 65;
    %ix/vec4/s 4;
    %load/vec4a v0x1fd15d0, 4;
    %add;
    %ix/getv/s 4, v0x1fd1f60_0;
    %store/vec4a v0x1fd1710, 4, 0;
    %load/vec4 v0x1fd1f60_0;
    %addi 1, 0, 32;
    %store/vec4 v0x1fd1f60_0, 0, 32;
    %jmp T_0.10;
T_0.11 ;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x1fd1710, 4;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x1fd1710, 4;
    %add;
    %store/vec4 v0x1fd1840_0, 0, 32;
    %load/vec4 v0x1fd1920_0;
    %cmpi/s 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %flag_mov 8, 5;
    %jmp/0 T_0.12, 8;
    %load/vec4 v0x1fd1920_0;
    %jmp/1 T_0.13, 8;
T_0.12 ; End of true expr.
    %load/vec4 v0x1fd1920_0;
    %inv;
    %pushi/vec4 1, 0, 32;
    %add;
    %jmp/0 T_0.13, 8;
 ; End of false expr.
    %blend;
T_0.13;
    %load/vec4 v0x1fd1840_0;
    %add;
    %store/vec4 v0x1fd1e80_0, 0, 32;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0x1fd2150;
T_1 ;
    %wait E_0x1fd2330;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fd2e40_0, 0, 32;
T_1.0 ;
    %load/vec4 v0x1fd2e40_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_1.1, 5;
    %load/vec4 v0x1fd2c40_0;
    %load/vec4 v0x1fd2e40_0;
    %muli 8, 0, 32;
    %part/s 8;
    %ix/getv/s 4, v0x1fd2e40_0;
    %store/vec4a v0x1fd28e0, 4, 0;
    %load/vec4 v0x1fd2800_0;
    %load/vec4 v0x1fd2e40_0;
    %muli 16, 0, 32;
    %part/s 16;
    %ix/getv/s 4, v0x1fd2e40_0;
    %store/vec4a v0x1fd2490, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1fd2e40_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x1fd2e40_0, 0, 32;
    %jmp T_1.0;
T_1.1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fd2e40_0, 0, 32;
T_1.2 ;
    %load/vec4 v0x1fd2e40_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_1.3, 5;
    %ix/getv/s 4, v0x1fd2e40_0;
    %load/vec4a v0x1fd28e0, 4;
    %pad/s 16;
    %ix/getv/s 4, v0x1fd2e40_0;
    %load/vec4a v0x1fd2490, 4;
    %add;
    %load/vec4 v0x1fd2e40_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x1fd2d30_0, 4, 16;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1fd2e40_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x1fd2e40_0, 0, 32;
    %jmp T_1.2;
T_1.3 ;
    %jmp T_1;
    .thread T_1, $push;
    .scope S_0x1fac6e0;
T_2 ;
    %wait E_0x1f8b240;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fd0cb0_0, 0, 32;
T_2.0 ;
    %load/vec4 v0x1fd0cb0_0;
    %cmpi/s 8, 0, 32;
    %jmp/0xz T_2.1, 5;
    %load/vec4 v0x1fd0d90_0;
    %load/vec4 v0x1fd0cb0_0;
    %muli 32, 0, 32;
    %part/s 32;
    %ix/getv/s 4, v0x1fd0cb0_0;
    %store/vec4a v0x1f98ff0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1fd0cb0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x1fd0cb0_0, 0, 32;
    %jmp T_2.0;
T_2.1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fd0cb0_0, 0, 32;
T_2.2 ;
    %load/vec4 v0x1fd0cb0_0;
    %cmpi/s 4, 0, 32;
    %jmp/0xz T_2.3, 5;
    %load/vec4 v0x1fd0cb0_0;
    %pad/s 64;
    %muli 2, 0, 64;
    %ix/vec4/s 4;
    %load/vec4a v0x1f98ff0, 4;
    %load/vec4 v0x1fd0cb0_0;
    %pad/s 65;
    %muli 2, 0, 65;
    %addi 1, 0, 65;
    %ix/vec4/s 4;
    %load/vec4a v0x1f98ff0, 4;
    %add;
    %ix/getv/s 4, v0x1fd0cb0_0;
    %store/vec4a v0x1fd0a10, 4, 0;
    %load/vec4 v0x1fd0cb0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x1fd0cb0_0, 0, 32;
    %jmp T_2.2;
T_2.3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fd0cb0_0, 0, 32;
T_2.4 ;
    %load/vec4 v0x1fd0cb0_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_2.5, 5;
    %load/vec4 v0x1fd0cb0_0;
    %pad/s 64;
    %muli 2, 0, 64;
    %ix/vec4/s 4;
    %load/vec4a v0x1fd0a10, 4;
    %load/vec4 v0x1fd0cb0_0;
    %pad/s 65;
    %muli 2, 0, 65;
    %addi 1, 0, 65;
    %ix/vec4/s 4;
    %load/vec4a v0x1fd0a10, 4;
    %add;
    %ix/getv/s 4, v0x1fd0cb0_0;
    %store/vec4a v0x1fd0b80, 4, 0;
    %load/vec4 v0x1fd0cb0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x1fd0cb0_0, 0, 32;
    %jmp T_2.4;
T_2.5 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x1fd0b80, 4;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x1fd0b80, 4;
    %add;
    %store/vec4 v0x1fd0ec0_0, 0, 32;
    %jmp T_2;
    .thread T_2, $push;
    .scope S_0x1fac940;
T_3 ;
    %pushi/vec4 0, 0, 5;
    %store/vec4 v0x1fd44c0_0, 0, 5;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x1fd39e0_0, 0, 8;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x1fd2fa0_0, 0, 8;
    %pushi/vec4 3, 0, 8;
    %store/vec4 v0x1fd3900_0, 0, 8;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x1fd33e0_0, 0, 8;
    %pushi/vec4 3, 0, 8;
    %store/vec4 v0x1fd34a0_0, 0, 8;
    %pushi/vec4 0, 0, 16;
    %store/vec4 v0x1fd3790_0, 0, 16;
    %end;
    .thread T_3;
    .scope S_0x1fac940;
T_4 ;
    %wait E_0x1facad0;
    %load/vec4 v0x1fd4400_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.0, 8;
    %pushi/vec4 0, 0, 5;
    %assign/vec4 v0x1fd44c0_0, 0;
    %jmp T_4.1;
T_4.0 ;
    %load/vec4 v0x1fd44c0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 5;
    %cmp/u;
    %jmp/1 T_4.2, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 5;
    %cmp/u;
    %jmp/1 T_4.3, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 5;
    %cmp/u;
    %jmp/1 T_4.4, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 5;
    %cmp/u;
    %jmp/1 T_4.5, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 5;
    %cmp/u;
    %jmp/1 T_4.6, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 5;
    %cmp/u;
    %jmp/1 T_4.7, 6;
    %pushi/vec4 0, 0, 5;
    %assign/vec4 v0x1fd44c0_0, 0;
    %jmp T_4.9;
T_4.2 ;
    %load/vec4 v0x1fd3790_0;
    %cmpi/u 8, 0, 16;
    %flag_inv 5; GE is !LT
    %jmp/0xz  T_4.10, 5;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fd3e70_0, 0, 32;
T_4.12 ;
    %load/vec4 v0x1fd3e70_0;
    %cmpi/s 336, 0, 32;
    %jmp/0xz T_4.13, 5;
    %ix/getv/s 4, v0x1fd3e70_0;
    %load/vec4a v0x1fd3160, 4;
    %pushi/vec4 8, 0, 16;
    %div;
    %ix/getv/s 3, v0x1fd3e70_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x1fd3160, 0, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1fd3e70_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x1fd3e70_0, 0, 32;
    %jmp T_4.12;
T_4.13 ;
    %load/vec4 v0x1fd4680_0;
    %assign/vec4 v0x1fd3080_0, 0;
    %pushi/vec4 3, 0, 5;
    %assign/vec4 v0x1fd44c0_0, 0;
    %jmp T_4.11;
T_4.10 ;
    %load/vec4 v0x1fd4280_0;
    %cmpi/e 1, 0, 1;
    %jmp/0xz  T_4.14, 4;
    %pushi/vec4 0, 0, 5;
    %assign/vec4 v0x1fd44c0_0, 0;
    %jmp T_4.15;
T_4.14 ;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x1fd4340_0, 0;
    %load/vec4 v0x1fd39e0_0;
    %pad/u 16;
    %addi 1, 0, 16;
    %pad/u 8;
    %assign/vec4 v0x1fd39e0_0, 0;
    %pushi/vec4 1, 0, 5;
    %assign/vec4 v0x1fd44c0_0, 0;
T_4.15 ;
T_4.11 ;
    %jmp T_4.9;
T_4.3 ;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x1fd4340_0, 0;
    %load/vec4 v0x1fd41a0_0;
    %assign/vec4 v0x1fd3ac0_0, 0;
    %load/vec4 v0x1fd3790_0;
    %parti/s 3, 0, 2;
    %pad/u 5;
    %ix/vec4 4;
    %load/vec4a v0x1fd3580, 4;
    %assign/vec4 v0x1fd3200_0, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fd3e70_0, 0, 32;
T_4.16 ;
    %load/vec4 v0x1fd3e70_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_4.17, 5;
    %load/vec4 v0x1fd39e0_0;
    %pad/u 66;
    %subi 1, 0, 66;
    %muli 16, 0, 66;
    %load/vec4 v0x1fd3e70_0;
    %pad/u 66;
    %add;
    %ix/vec4 4;
    %load/vec4a v0x1fd3160, 4;
    %ix/load 5, 0, 0;
    %load/vec4 v0x1fd3e70_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %assign/vec4/off/d v0x1fd32f0_0, 4, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1fd3e70_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x1fd3e70_0, 0, 32;
    %jmp T_4.16;
T_4.17 ;
    %pushi/vec4 2, 0, 5;
    %assign/vec4 v0x1fd44c0_0, 0;
    %jmp T_4.9;
T_4.4 ;
    %load/vec4 v0x1fd3b80_0;
    %load/vec4 v0x1fd3790_0;
    %parti/s 3, 0, 2;
    %pad/u 5;
    %ix/vec4 3;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x1fd3580, 0, 4;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fd3e70_0, 0, 32;
T_4.18 ;
    %load/vec4 v0x1fd3e70_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_4.19, 5;
    %load/vec4 v0x1fd3c40_0;
    %load/vec4 v0x1fd3e70_0;
    %muli 16, 0, 32;
    %part/s 16;
    %load/vec4 v0x1fd39e0_0;
    %pad/u 66;
    %subi 1, 0, 66;
    %muli 16, 0, 66;
    %load/vec4 v0x1fd3e70_0;
    %pad/u 66;
    %add;
    %ix/vec4 3;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x1fd3160, 0, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1fd3e70_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x1fd3e70_0, 0, 32;
    %jmp T_4.18;
T_4.19 ;
    %load/vec4 v0x1fd39e0_0;
    %cmpi/e 21, 0, 8;
    %jmp/0xz  T_4.20, 4;
    %pushi/vec4 0, 0, 8;
    %assign/vec4 v0x1fd39e0_0, 0;
    %load/vec4 v0x1fd3790_0;
    %addi 1, 0, 16;
    %assign/vec4 v0x1fd3790_0, 0;
T_4.20 ;
    %pushi/vec4 0, 0, 5;
    %assign/vec4 v0x1fd44c0_0, 0;
    %jmp T_4.9;
T_4.5 ;
    %load/vec4 v0x1fd3900_0;
    %load/vec4 v0x1fd2fa0_0;
    %cmp/u;
    %flag_or 5, 4;
    %jmp/0xz  T_4.22, 5;
    %pushi/vec4 5, 0, 5;
    %assign/vec4 v0x1fd44c0_0, 0;
    %jmp T_4.23;
T_4.22 ;
    %load/vec4 v0x1fd4280_0;
    %cmpi/e 1, 0, 1;
    %jmp/0xz  T_4.24, 4;
    %pushi/vec4 3, 0, 5;
    %assign/vec4 v0x1fd44c0_0, 0;
    %jmp T_4.25;
T_4.24 ;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x1fd4340_0, 0;
    %pushi/vec4 4, 0, 5;
    %assign/vec4 v0x1fd44c0_0, 0;
T_4.25 ;
T_4.23 ;
    %jmp T_4.9;
T_4.6 ;
    %jmp T_4.9;
T_4.7 ;
    %jmp T_4.9;
T_4.9 ;
    %pop/vec4 1;
T_4.1 ;
    %jmp T_4;
    .thread T_4;
# The file index is used to find the file name in the following table.
:file_names 6;
    "N/A";
    "<interactive>";
    "detectobj.v";
    "./WindowSumCalc.v";
    "./AbsSumCalc.v";
    "./BgNoiseCalc.v";
